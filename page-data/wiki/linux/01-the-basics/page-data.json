{
    "componentChunkName": "component---src-templates-wiki-page-tsx",
    "path": "/wiki/linux/01-the-basics/",
    "result": {"data":{"markdownRemark":{"fields":{"slug":"/wiki/linux/01-the-basics/"},"frontmatter":{"title":"1. The Basics"},"html":"<h2>Terms and concepts</h2>\n<h3>Binaries</h3>\n<p>Are <strong>files that can be executed</strong>. Those files generally reside in <code class=\"language-text\">/usr/bin</code>, <code class=\"language-text\">/usr/sbin</code>, <code class=\"language-text\">/bin</code>,... and include utilities such as <code class=\"language-text\">ps</code>, <code class=\"language-text\">cat</code>, <code class=\"language-text\">ls</code>, <code class=\"language-text\">cd</code>, ...</p>\n<h3>Case sensitivity</h3>\n<p>Unlike Windows, Linux is case sensistive. For Linux <code class=\"language-text\">Desktop</code> is different from <code class=\"language-text\">desktop</code>.</p>\n<h3>Directory</h3>\n<p>Is the same concept as folder in Windows. Is a way to of organizing files in a hierarchical manner.</p>\n<h3>Home</h3>\n<p>Normally, each Linux usera has his own <code class=\"language-text\">/home</code> directory. It's the default placee where the files created by an user are stored.</p>\n<h3>Library</h3>\n<p>Programs and utilties shared between different applications. Are similar to Windows DDLs. Libraries generally reside in <code class=\"language-text\">/lib</code>.</p>\n<h3>root</h3>\n<p>The user <em>root</em> is the administartor or the superuser account. This user can do near everything in the system.</p>\n<h3>Script</h3>\n<p>Is a series of commands run in an interpretive environment than converts each line to source code.</p>\n<h3>Shell</h3>\n<p>This is an environment and interpreter for running commands on Linux. The most widely used shell is <em>Bash</em>.</p>\n<h3>Terminal</h3>\n<p>Is the command line interface in which the shell interpreter runs.</p>\n<h2>The Linux Filesystem</h2>\n<p>Linux uses a logical filesystem. At the very top of the filesystem structure is <code class=\"language-text\">/</code>, which is usually referred as the <em>root</em> if the filesystem.</p>\n<p>The most important subdirectories to know are:</p>\n<ul>\n<li><code class=\"language-text\">/root</code>: The home directory of the all-powerful root users.</li>\n<li><code class=\"language-text\">/etc</code>: Generally contains the Linux configuration files - files than contrl when and how programs start up.</li>\n<li><code class=\"language-text\">/home</code>: The user's home directory.</li>\n<li><code class=\"language-text\">/mnt</code>: Where otrhe filesystems are attached or mounted to the filesystem.</li>\n<li><code class=\"language-text\">/media</code>: Where CDs and USB devices are usually attached or mounted to the filesystem.</li>\n<li><code class=\"language-text\">/bin</code>: Where the application <em>binaries</em> reside.</li>\n<li><code class=\"language-text\">/lib</code>: Where the application <em>libraries</em> reside</li>\n</ul>\n<h2>Basic commands</h2>\n<h3>pwd</h3>\n<p>The <em>Present Current Directory</em> commands shows the actual location in the directory structure.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token builtin class-name\">pwd</span>\n/home/kali</code></pre></div>\n<h3>whoami</h3>\n<p>Shows the name of the user which you're logged in as.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">whoami</span>\nkali</code></pre></div>\n<h3>cd</h3>\n<p>The <em>Change Directory</em> command allows to select a new working directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token builtin class-name\">cd</span> /etc/ssh \n                                                        \n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>/etc/ssh<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token builtin class-name\">pwd</span>   \n/etc/ssh</code></pre></div>\n<p>Depending on the arguments the command allows diffetent navigations.</p>\n<ul>\n<li><code class=\"language-text\">cd</code> or <code class=\"language-text\">cd ~</code>: navigate to home direcory</li>\n<li><code class=\"language-text\">cd ..</code>: navigates one level up. You can navigete more levels up adding mor dot pairs.</li>\n<li><code class=\"language-text\">cd -</code>: navigates to the previus directory you've visited.</li>\n</ul>\n<h3>ls</h3>\n<p>The <code class=\"language-text\">ls</code> command lists the contents of a directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</code></pre></div>\n<p>You can use the <code class=\"language-text\">-l</code> argument to use a long listing format:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span> -l \ntotal <span class=\"token number\">32</span>\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Desktop\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Documents\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:52 Downloads\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Music\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Pictures\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Public\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Templates\ndrwxr-xr-x <span class=\"token number\">2</span> kali kali <span class=\"token number\">4096</span> Jan  <span class=\"token number\">5</span> <span class=\"token number\">11</span>:45 Videos</code></pre></div>\n<p>For showing the hidden files (those which starts with a dot) you can use the <code class=\"language-text\">-a</code> argument:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span> -a    \n<span class=\"token builtin class-name\">.</span>                 .cache     Downloads   .ICEauthority  Pictures   .tmux             .xsession-errors\n<span class=\"token punctuation\">..</span>                .config    .face       .java          .pki       .tmux.conf        .xsession-errors.old\n.bash_logout      Desktop    .face.icon  .local         .profile   .tmux.conf.local  .zsh_history\n.bashrc           .dmrc      .gnupg      .mozilla       Public     Videos            .zshrc\n.bashrc.original  Documents  .hushlogin  Music          Templates  .Xauthority</code></pre></div>\n<p>For listing the content for a different direcctory you can use the directory as argument:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span> .tmux       \nLICENSE.MIT  LICENSE.WTFPLv2  README.md</code></pre></div>\n<h3>man</h3>\n<p>The <em>Manual</em> command shows the manual page of the command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">man</span> <span class=\"token function\">ls</span></code></pre></div>\n<h3>--help argument</h3>\n<p>Shows a summarized explanation of the command. Not all commands have this argument.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span> --help \nUsage: <span class=\"token function\">ls</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>FILE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.\nList information about the FILEs <span class=\"token punctuation\">(</span>the current directory by default<span class=\"token punctuation\">)</span>.\nSort entries alphabetically <span class=\"token keyword\">if</span> none of -cftuvSUX nor --sort is specified.\n\nMandatory arguments to long options are mandatory <span class=\"token keyword\">for</span> short options too.\n  -a, --all                  <span class=\"token keyword\">do</span> not ignore entries starting with <span class=\"token builtin class-name\">.</span>\n  -A, --almost-all           <span class=\"token keyword\">do</span> not list implied <span class=\"token builtin class-name\">.</span> and <span class=\"token punctuation\">..</span>\n      --author               with -l, print the author of each <span class=\"token function\">file</span>\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<h3>locate</h3>\n<p>The <code class=\"language-text\">locate</code> command will go through your entire filesystem and locate every occurrence of a that word:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">locate</span> neofetch\n/home/kali/.config/neofetch\n/home/kali/.config/neofetch/config.conf\n/usr/bin/neofetch\n/usr/share/doc/neofetch\n/usr/share/doc/neofetch/changelog.Debian.gz\n/usr/share/doc/neofetch/copyright\n/usr/share/man/man1/neofetch.1.gz\n/var/lib/dpkg/info/neofetch.list\n/var/lib/dpkg/info/neofetch.md5sums</code></pre></div>\n<p>If the database is not initalized, you can run <code class=\"language-text\">sudo updatedb</code>.</p>\n<h3>whereis</h3>\n<p>Locates a binary file. It's important to consider that the command only searches in the <code class=\"language-text\">$PATH</code> varible.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">whereis</span> neofetch\nneofetch: /usr/bin/neofetch /usr/share/man/man1/neofetch.1.gz</code></pre></div>\n<h3>find</h3>\n<p>Is the most poweful and flexible command for searching utilities.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">sudo</span> <span class=\"token function\">find</span> / -type f -name neofetch\n/usr/bin/neofetch\nfind: ‘/run/user/1000/gvfs’: Permission denied</code></pre></div>\n<h3>grep</h3>\n<p>The <code class=\"language-text\">grep</code> command allows to filter lines that matches a string or a regular expression.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ps</span> uax <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> calculator\nkali       <span class=\"token number\">38018</span>  <span class=\"token number\">0.0</span>  <span class=\"token number\">0.0</span>   <span class=\"token number\">6228</span>  <span class=\"token number\">2272</span> pts/0    S+   09:35   <span class=\"token number\">0</span>:00 <span class=\"token function\">grep</span> --color<span class=\"token operator\">=</span>auto calculator</code></pre></div>\n<p>In this command, we are using de <code class=\"language-text\">ps aux</code> command to list all processes running in this system, and piping it to the <code class=\"language-text\">grep</code> command filtering with the keyword \"calculator\".</p>\n<h3>cat</h3>\n<p>The <em>con<strong>cat</strong>enate</em> command is usually used to display the content of a file, but it can also be used to create small files.</p>\n<p>You can create a file using the redirect symbol <code class=\"language-text\">></code> after the <code class=\"language-text\">cat</code> command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> <span class=\"token operator\">></span> sample_file.txt\nContent of the sample <span class=\"token function\">file</span></code></pre></div>\n<p>When you hit enter with this command, the shell enters in <em>interactive mode</em> and you can start to write the content of the file. To exit press CTRL+D.</p>\n<p>After that, you can use the cat command to show the content without using the redirect symbot <code class=\"language-text\">></code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> sample_file.txt\nContent of the sample <span class=\"token function\">file</span></code></pre></div>\n<p>You can add more content to the file with the append symbol <code class=\"language-text\">>></code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> <span class=\"token operator\">></span> sample_file.txt\nSome content to the file.\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> sample_file.txt  \nSome content to the file.\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> <span class=\"token operator\">>></span> sample_file.txt \n<span class=\"token function\">more</span> content to the <span class=\"token function\">file</span>\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> sample_file.txt   \nSome content to the file.more content to the <span class=\"token function\">file</span></code></pre></div>\n<h3>touch</h3>\n<p>This command was createdd to simply touch a file in order to change some of its details, such as the date it was created or modified. It can be also used to create a file if the file used as argument doesn't exists.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">touch</span> touch_file.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  touch_file.txt  Videos</code></pre></div>\n<h3>mkdir</h3>\n<p>The command <em>make directory</em> is used to create a new directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">mkdir</span> new_direcotory\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token builtin class-name\">cd</span> new_direcotory\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token builtin class-name\">pwd</span>                     \n/home/kali/new_direcotory</code></pre></div>\n<h3>cp</h3>\n<p>The <em>copy</em> commands allows to copy a file or a directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">touch</span> old.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cp</span> old.txt new.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nnew.txt  old.txt</code></pre></div>\n<h3>mv</h3>\n<p>The <em>move</em> command can be used to move a file or to rename it.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nnew.txt  old.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">mv</span> old.txt renamed.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nnew.txt  renamed.txt</code></pre></div>\n<h3>rm</h3>\n<p>The <em>remove</em> command allows to remove a files or directories.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nnew.txt  renamed.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">rm</span> renamed.txt\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/new_direcotory<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nnew.txt</code></pre></div>\n<p>To remove a directory, you have to use the recursive arguement <code class=\"language-text\">-r</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nDesktop  Documents  Downloads  Music  new_direcotory  Pictures  Public  Templates  Videos\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">rm</span> -r new_direcotory\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">ls</span>\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</code></pre></div>\n<h2>Exercises</h2>"}},"pageContext":{"id":"047da2cf-5052-5d84-b823-a3fe1f08aeae"}},
    "staticQueryHashes": []}