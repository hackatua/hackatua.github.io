{
    "componentChunkName": "component---src-templates-wiki-page-tsx",
    "path": "/wiki/linux/01-the-basics/",
    "result": {"data":{"markdownRemark":{"frontmatter":{"title":"1. The Basics"},"html":"<h2>Terms and concepts</h2>\n<h3>Binaries</h3>\n<p>Are <strong>files that can be executed</strong>. Those files generally reside in <code>/usr/bin</code>, <code>/usr/sbin</code>, <code>/bin</code>,... and include utilities such as <code>ps</code>, <code>cat</code>, <code>ls</code>, <code>cd</code>, ...</p>\n<h3>Case sensitivity</h3>\n<p>Unlike Windows, Linux is case sensistive. For Linux <code>Desktop</code> is different from <code>desktop</code>.</p>\n<h3>Directory</h3>\n<p>Is the same concept as folder in Windows. Is a way to of organizing files in a hierarchical manner.</p>\n<h3>Home</h3>\n<p>Normally, each Linux usera has his own <code>/home</code> directory. It's the default placee where the files created by an user are stored.</p>\n<h3>Library</h3>\n<p>Programs and utilties shared between different applications. Are similar to Windows DDLs. Libraries generally reside in <code>/lib</code>.</p>\n<h3>root</h3>\n<p>The user <em>root</em> is the administartor or the superuser account. This user can do near everything in the system.</p>\n<h3>Script</h3>\n<p>Is a series of commands run in an interpretive environment than converts each line to source code.</p>\n<h3>Shell</h3>\n<p>This is an environment and interpreter for running commands on Linux. The most widely used shell is <em>Bash</em>.</p>\n<h3>Terminal</h3>\n<p>Is the command line interface in which the shell interpreter runs.</p>\n<h2>The Linux Filesystem</h2>\n<p>Linux uses a logical filesystem. At the very top of the filesystem structure is <code>/</code>, which is usually referred as the <em>root</em> if the filesystem.</p>\n<p>The most important subdirectories to know are:</p>\n<ul>\n<li><code>/root</code>: The home directory of the all-powerful root users.</li>\n<li><code>/etc</code>: Generally contains the Linux configuration files - files than contrl when and how programs start up.</li>\n<li><code>/home</code>: The user's home directory.</li>\n<li><code>/mnt</code>: Where otrhe filesystems are attached or mounted to the filesystem.</li>\n<li><code>/media</code>: Where CDs and USB devices are usually attached or mounted to the filesystem.</li>\n<li><code>/bin</code>: Where the application <em>binaries</em> reside.</li>\n<li><code>/lib</code>: Where the application <em>libraries</em> reside</li>\n</ul>\n<h2>Basic commands</h2>\n<h3>pwd</h3>\n<p>The <em>Present Current Directory</em> commands shows the actual location in the directory structure.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ pwd\n/home/kali</code>\n        </deckgo-highlight-code>\n<h3>whoami</h3>\n<p>Shows the name of the user which you're logged in as.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ whoami\nkali</code>\n        </deckgo-highlight-code>\n<h3>cd</h3>\n<p>The <em>Change Directory</em> command allows to select a new working directory.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ cd /etc/ssh \n                                                        \n┌──(kali㉿kali)-[/etc/ssh]\n└─$ pwd   \n/etc/ssh</code>\n        </deckgo-highlight-code>\n<p>Depending on the arguments the command allows diffetent navigations.</p>\n<ul>\n<li><code>cd</code> or <code>cd ~</code>: navigate to home direcory</li>\n<li><code>cd ..</code>: navigates one level up. You can navigete more levels up adding mor dot pairs.</li>\n<li><code>cd -</code>: navigates to the previus directory you've visited.</li>\n</ul>\n<h3>ls</h3>\n<p>The <code>ls</code> command lists the contents of a directory.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</code>\n        </deckgo-highlight-code>\n<p>You can use the <code>-l</code> argument to use a long listing format:</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls -l \ntotal 32\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Desktop\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Documents\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:52 Downloads\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Music\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Pictures\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Public\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Templates\ndrwxr-xr-x 2 kali kali 4096 Jan  5 11:45 Videos</code>\n        </deckgo-highlight-code>\n<p>For showing the hidden files (those which starts with a dot) you can use the <code>-a</code> argument:</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls -a    \n.                 .cache     Downloads   .ICEauthority  Pictures   .tmux             .xsession-errors\n..                .config    .face       .java          .pki       .tmux.conf        .xsession-errors.old\n.bash_logout      Desktop    .face.icon  .local         .profile   .tmux.conf.local  .zsh_history\n.bashrc           .dmrc      .gnupg      .mozilla       Public     Videos            .zshrc\n.bashrc.original  Documents  .hushlogin  Music          Templates  .Xauthority</code>\n        </deckgo-highlight-code>\n<p>For listing the content for a different direcctory you can use the directory as argument:</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls .tmux       \nLICENSE.MIT  LICENSE.WTFPLv2  README.md</code>\n        </deckgo-highlight-code>\n<h3>man</h3>\n<p>The <em>Manual</em> command shows the manual page of the command.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ man ls</code>\n        </deckgo-highlight-code>\n<h3>--help argument</h3>\n<p>Shows a summarized explanation of the command. Not all commands have this argument.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls --help \nUsage: ls [OPTION]... [FILE]...\nList information about the FILEs (the current directory by default).\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n\nMandatory arguments to long options are mandatory for short options too.\n  -a, --all                  do not ignore entries starting with .\n  -A, --almost-all           do not list implied . and ..\n      --author               with -l, print the author of each file\n...</code>\n        </deckgo-highlight-code>\n<h3>locate</h3>\n<p>The <code>locate</code> command will go through your entire filesystem and locate every occurrence of a that word:</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ locate neofetch\n/home/kali/.config/neofetch\n/home/kali/.config/neofetch/config.conf\n/usr/bin/neofetch\n/usr/share/doc/neofetch\n/usr/share/doc/neofetch/changelog.Debian.gz\n/usr/share/doc/neofetch/copyright\n/usr/share/man/man1/neofetch.1.gz\n/var/lib/dpkg/info/neofetch.list\n/var/lib/dpkg/info/neofetch.md5sums</code>\n        </deckgo-highlight-code>\n<p>If the database is not initalized, you can run <code>sudo updatedb</code>.</p>\n<h3>whereis</h3>\n<p>Locates a binary file. It's important to consider that the command only searches in the <code>$PATH</code> varible.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ whereis neofetch\nneofetch: /usr/bin/neofetch /usr/share/man/man1/neofetch.1.gz</code>\n        </deckgo-highlight-code>\n<h3>find</h3>\n<p>Is the most poweful and flexible command for searching utilities.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ sudo find / -type f -name neofetch\n/usr/bin/neofetch\nfind: ‘/run/user/1000/gvfs’: Permission denied</code>\n        </deckgo-highlight-code>\n<h3>grep</h3>\n<p>The <code>grep</code> command allows to filter lines that matches a string or a regular expression.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ps uax | grep calculator\nkali       38018  0.0  0.0   6228  2272 pts/0    S+   09:35   0:00 grep --color=auto calculator</code>\n        </deckgo-highlight-code>\n<p>In this command, we are using de <code>ps aux</code> command to list all processes running in this system, and piping it to the <code>grep</code> command filtering with the keyword \"calculator\".</p>\n<h3>cat</h3>\n<p>The <em>con<strong>cat</strong>enate</em> command is usually used to display the content of a file, but it can also be used to create small files.</p>\n<p>You can create a file using the redirect symbol <code>></code> after the <code>cat</code> command.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ cat &gt; sample_file.txt\nContent of the sample file</code>\n        </deckgo-highlight-code>\n<p>When you hit enter with this command, the shell enters in <em>interactive mode</em> and you can start to write the content of the file. To exit press CTRL+D.</p>\n<p>After that, you can use the cat command to show the content without using the redirect symbot <code>></code>.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ cat sample_file.txt\nContent of the sample file</code>\n        </deckgo-highlight-code>\n<p>You can add more content to the file with the append symbol <code>>></code>.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ cat &gt; sample_file.txt\nSome content to the file.\n\n┌──(kali㉿kali)-[~]\n└─$ cat sample_file.txt  \nSome content to the file.\n\n┌──(kali㉿kali)-[~]\n└─$ cat &gt;&gt; sample_file.txt \nmore content to the file\n\n┌──(kali㉿kali)-[~]\n└─$ cat sample_file.txt   \nSome content to the file.more content to the file</code>\n        </deckgo-highlight-code>\n<h3>touch</h3>\n<p>This command was createdd to simply touch a file in order to change some of its details, such as the date it was created or modified. It can be also used to create a file if the file used as argument doesn't exists.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ touch touch_file.txt\n\n┌──(kali㉿kali)-[~]\n└─$ ls\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  touch_file.txt  Videos</code>\n        </deckgo-highlight-code>\n<h3>mkdir</h3>\n<p>The command <em>make directory</em> is used to create a new directory.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ mkdir new_direcotory\n\n┌──(kali㉿kali)-[~]\n└─$ cd new_direcotory\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ pwd                     \n/home/kali/new_direcotory</code>\n        </deckgo-highlight-code>\n<h3>cp</h3>\n<p>The <em>copy</em> commands allows to copy a file or a directory.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~/new_direcotory]\n└─$ touch old.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ cp old.txt new.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ ls\nnew.txt  old.txt</code>\n        </deckgo-highlight-code>\n<h3>mv</h3>\n<p>The <em>move</em> command can be used to move a file or to rename it.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~/new_direcotory]\n└─$ ls\nnew.txt  old.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ mv old.txt renamed.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ ls\nnew.txt  renamed.txt</code>\n        </deckgo-highlight-code>\n<h3>rm</h3>\n<p>The <em>remove</em> command allows to remove a files or directories.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~/new_direcotory]\n└─$ ls\nnew.txt  renamed.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ rm renamed.txt\n\n┌──(kali㉿kali)-[~/new_direcotory]\n└─$ ls\nnew.txt</code>\n        </deckgo-highlight-code>\n<p>To remove a directory, you have to use the recursive arguement <code>-r</code>.</p>\n<deckgo-highlight-code language=\"bash\" terminal=\"none\" theme=\"dracula\" line-numbers=\"true\"  >\n          <code slot=\"code\">┌──(kali㉿kali)-[~]\n└─$ ls\nDesktop  Documents  Downloads  Music  new_direcotory  Pictures  Public  Templates  Videos\n\n┌──(kali㉿kali)-[~]\n└─$ rm -r new_direcotory\n\n┌──(kali㉿kali)-[~]\n└─$ ls\nDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</code>\n        </deckgo-highlight-code>\n<h2>Exercises</h2>"}},"pageContext":{"id":"047da2cf-5052-5d84-b823-a3fe1f08aeae"}},
    "staticQueryHashes": []}