{
    "componentChunkName": "component---src-templates-wiki-page-tsx",
    "path": "/wiki/linux/02-text-manipulation/",
    "result": {"data":{"markdownRemark":{"fields":{"slug":"/wiki/linux/02-text-manipulation/"},"frontmatter":{"title":"2. Text Manipulation"},"html":"<p>In Linux, nerly everything you deal with directly is a file. Most of the application configuration files in Linux are text files. In order to change the configuration of an application you only have to modify the configuration file and restart it.</p>\n<p>We will be using a Apache configuration file as sample for this chapter:</p>\n<ul>\n<li><a href=\"/40d380c008e0689f37492e549513f329/httpd.conf\">httpd.conf</a></li>\n</ul>\n<h2>Viewing file contents</h2>\n<h3>cat</h3>\n<p>As we've seen in the first chapter, the easiest way to see a file is the <code class=\"language-text\">cat</code> command.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> file.txt\nA text</code></pre></div>\n<p>The problem with this command for showing file contents is that it will stream all the file untils it comens to the end of it. This may be a problem if the file is to long.</p>\n<h3>head</h3>\n<p>The <code class=\"language-text\">head</code> command shows the beginning of a file. By default, this command shows the first 10 lines of a file.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">head</span> httpd.conf\n<span class=\"token comment\">###*********************************************************</span>\n<span class=\"token comment\">###*  Web-Developer Server Suite                           *</span>\n<span class=\"token comment\">###*  external link: http://sourceforge.net/projects/webdeveloper         *</span>\n<span class=\"token comment\">###*  devside_net@users.sourceforge.net                    *</span>\n<span class=\"token comment\">###*  v1.95-httpd22-ssl                                    *</span>\n<span class=\"token comment\">###*********************************************************</span>\n\n\nThreadsPerChild <span class=\"token number\">250</span>\nMaxRequestsPerChild  <span class=\"token number\">0</span></code></pre></div>\n<p>If you want to see more or lees lines you can set the number of lines putting the number of lines to show after a \"-\":</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">head</span> -5 httpd.conf\n<span class=\"token comment\">###*********************************************************</span>\n<span class=\"token comment\">###*  Web-Developer Server Suite                           *</span>\n<span class=\"token comment\">###*  external link: http://sourceforge.net/projects/webdeveloper         *</span>\n<span class=\"token comment\">###*  devside_net@users.sourceforge.net                    *</span>\n<span class=\"token comment\">###*  v1.95-httpd22-ssl</span></code></pre></div>\n<h3>tail</h3>\n<p>The <code class=\"language-text\">tail</code> command, in oposition to the <code class=\"language-text\">head</code> command, shows the last lines of a file. As <code class=\"language-text\">head</code> command, as default shows the last 10 lines.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">tail</span> httpd.conf\n     Alias /phpMyAdmin <span class=\"token string\">\"C:/www/phpMyAdmin\"</span>\n<span class=\"token operator\">&lt;</span>/IfModule<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>Directory <span class=\"token string\">\"C:/www/phpMyAdmin\"</span><span class=\"token operator\">></span>\n     Options None\n     AllowOverride None\n     order deny,allow\n     deny from all\n     allow from <span class=\"token number\">127.0</span>.0.1\n<span class=\"token operator\">&lt;</span>/Directory<span class=\"token operator\">></span></code></pre></div>\n<p>If you want to show more or less lines you can specify the number of lines after a \"-\":</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">tail</span> -5  httpd.conf\n     AllowOverride None\n     order deny,allow\n     deny from all\n     allow from <span class=\"token number\">127.0</span>.0.1\n<span class=\"token operator\">&lt;</span>/Directory<span class=\"token operator\">></span></code></pre></div>\n<h3>nl</h3>\n<p>The <code class=\"language-text\">nl</code> (<em>number lines</em>) command is lika <code class=\"language-text\">cat</code> commnand, but shows the number of the lines. This is handy for reference changes and come back to the same palces within the file.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">nl</span> httpd.conf\n     <span class=\"token number\">1</span>  <span class=\"token comment\">###*********************************************************</span>\n     <span class=\"token number\">2</span>  <span class=\"token comment\">###*  Web-Developer Server Suite                           *</span>\n     <span class=\"token number\">3</span>  <span class=\"token comment\">###*  external link: http://sourceforge.net/projects/webdeveloper         *</span>\n     <span class=\"token number\">4</span>  <span class=\"token comment\">###*  devside_net@users.sourceforge.net                    *</span>\n     <span class=\"token number\">5</span>  <span class=\"token comment\">###*  v1.95-httpd22-ssl                                    *</span>\n     <span class=\"token number\">6</span>  <span class=\"token comment\">###*********************************************************</span>\n\n\n     <span class=\"token number\">7</span>  ThreadsPerChild <span class=\"token number\">250</span>\n\n     <span class=\"token comment\"># ... continues until the end of the file</span></code></pre></div>\n<h3>grep</h3>\n<p>The <code class=\"language-text\">grep</code> command allows to filter the content of a file for display. In order to use it, you can pipe (\"|\") the result for using <code class=\"language-text\">cat</code> in a file.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> httpd.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"^LoadModule\"</span>\nLoadModule alias_module modules/mod_alias.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule php5_module <span class=\"token string\">\"C:/www/php5/php5apache2.dll\"</span></code></pre></div>\n<p>As we can see in the code bellow, we are filtering the lines that start with \"LoadModule\". In this way we can show only the loaded modules.</p>\n<p>We can use the <code class=\"language-text\">-v</code> argument to invert selection. This is handy if you want to hide the comment lines (the lines starting with \"#\"):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> httpd.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^#\"</span>\n\n\nThreadsPerChild <span class=\"token number\">250</span>\nMaxRequestsPerChild  <span class=\"token number\">0</span>\n\nListen <span class=\"token number\">80</span>\n\nServerRoot <span class=\"token string\">\"/www/Apache22\"</span>\nDocumentRoot <span class=\"token string\">\"/THDL/thdl-site\"</span>\n was /www/webroot\n\n <span class=\"token comment\"># ... continues until the end of the file</span></code></pre></div>\n<h3>sed</h3>\n<p>The <code class=\"language-text\">sed</code> (<em>stream editor</em>) command allows you search for occurrendes of a word or a text pattern and then perform an actiion on it.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> file.txt\nsome text\n\n┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">sed</span> s/some/Some/g file.txt\nSome text</code></pre></div>\n<p>A we can se in the code example, we have replaced the \"some\" word with \"Some\", making uppercase the first letter. In this example, we have used <code class=\"language-text\">s/regexp/replacement/</code> command. The <code class=\"language-text\">g</code> at the then is the <em>global regexp flag</em>, that indicates to replace all the matches in the file, not only the first one.</p>\n<p>We can use <code class=\"language-text\">sed</code> for removing empty lines. Working with <code class=\"language-text\">grep</code> and <code class=\"language-text\">head</code> we show the first 10 lines with content (uncommented and non empty):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">cat</span> httpd.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^#\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> /^$/d <span class=\"token operator\">|</span> <span class=\"token function\">head</span>\nThreadsPerChild <span class=\"token number\">250</span>\nMaxRequestsPerChild  <span class=\"token number\">0</span>\nListen <span class=\"token number\">80</span>\nServerRoot <span class=\"token string\">\"/www/Apache22\"</span>\nDocumentRoot <span class=\"token string\">\"/THDL/thdl-site\"</span>\n was /www/webroot\nServerName localhost:80\nServerAdmin admin@localhost\nErrorLog logs/error.log\nLogLevel error</code></pre></div>\n<h3>more</h3>\n<p>The <code class=\"language-text\">more</code> command displays a page of a file at a time, and allows you to go to the next page pressing <em>SPACE-BAR</em> or <em>ARROW-DOWN</em> keys,o to the previous page with <em>ARROW-UP</em> key, or advence a line with the <em>INTRO</em> key. To quit go to the end of the file or press <em>q</em> key.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">more</span> httpd.conf\n\n<span class=\"token comment\">###*********************************************************</span>\n<span class=\"token comment\">###*  Web-Developer Server Suite                           *</span>\n<span class=\"token comment\">###*  external link: http://sourceforge.net/projects/webdeveloper         *</span>\n<span class=\"token comment\">###*  devside_net@users.sourceforge.net                    *</span>\n<span class=\"token comment\">###*  v1.95-httpd22-ssl                                    *</span>\n<span class=\"token comment\">###*********************************************************</span>\n\n\nThreadsPerChild <span class=\"token number\">250</span>\nMaxRequestsPerChild  <span class=\"token number\">0</span>\n\nListen <span class=\"token number\">80</span>\n--More--<span class=\"token punctuation\">(</span><span class=\"token number\">6</span>%<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>less</h3>\n<p>The <code class=\"language-text\">less</code> command is like <code class=\"language-text\">more</code> command, but with additional functionality. With <code class=\"language-text\">less</code> you can scroll in te file and also filter it for terms.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">┌──<span class=\"token punctuation\">(</span>kali㉿kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span>\n└─$ <span class=\"token function\">less</span> httpd.conf</code></pre></div>\n<p>To search in the file you have to presh the slash key (<em>/</em>). After that you can type and hit <em>INTRO</em>. <code class=\"language-text\">less</code> will hightlight the coincidences. You can press <em>n</em>(next) to go to the next coincidence. In order to quit, like with <code class=\"language-text\">more</code>, press the <em>q</em> key.</p>"}},"pageContext":{"id":"1d1f413a-da2a-5ab2-99b8-94b0f3b0faa2"}},
    "staticQueryHashes": ["1558889980"]}